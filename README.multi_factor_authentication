# Requirements:
* Python 3.x
* pyotp library (pip install pyotp)

# What does it do?
* This Python script implements two-factor authentication (2FA) using Time-Based One-Time Passwords (TOTP) in Python.

# How does it work?
* generate_totp_secret() generates a random secret key used for generating TOTP codes.
* generate_totp_uri(secret, account_name) generates the TOTP URI for a specific account, which can be used to set up the account in an authenticator app.
* verify_totp_token(secret, token) verifies if the TOTP token entered by the user is valid.

# Usage:
* Install the required dependency using pip install pyotp.
* Run the script.
* Scan the generated QR code using a TOTP-compatible authenticator app.
* Enter the TOTP token generated by the app when prompted.
* The script will output whether the token is valid or not.
* Ensure the secret key is handled securely and follow best practices for TOTP implementation.

# Listed below is an example of what a succesful input/output may look like:
* Scan the following QR code using a TOTP app:
* otpauth://totp/My%20Company:john.doe%40example.com?secret=SECRETKEY&issuer=My%20Company
* Enter the TOTP token: 123456
* Token is valid.

# Listed below is an example of what a failed input/output may look like:
* Scan the following QR code using a TOTP app:
* otpauth://totp/My%20Company:john.doe%40example.com?secret=SECRETKEY&issuer=My%20Company
* Enter the TOTP token: 654321
* Token is invalid.
